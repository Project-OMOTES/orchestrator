services:
  orchestrator:
    build: ${ORCHESTRATOR_DIR}
    image: !reset
    volumes:
      - "${ORCHESTRATOR_TEST_DIR}/orchestrator_workflow_config.json:/config/workflow_config.json"

  orchestrator_postgres_db:
    ports:
      - "${POSTGRES_DEV_PORT}:5432"

  test_worker: &test_worker
    build: ${TEST_WORKER_DIR}
    deploy:
      replicas: 3
    networks:
      - omotes
    environment: &test_worker_env
      RABBITMQ_HOSTNAME: rabbitmq-nwn
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_CELERY_USER_NAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_CELERY_USER_PASSWORD}
      RABBITMQ_VIRTUALHOST: omotes_celery
      LOG_LEVEL: ${LOG_LEVEL}
      WORKER_TYPE: NO_FAULT
    depends_on:
      rabbitmq:
        condition: service_healthy

  test_hard_crash_worker:
    <<: *test_worker
    environment:
      <<: *test_worker_env
      WORKER_TYPE: HARD_CRASH
    deploy:
      resources:
        limits:
          memory: 100mb
    memswap_limit: 100mb

  test_long_sleep_worker:
    <<: *test_worker
    environment:
      <<: *test_worker_env
      WORKER_TYPE: LONG_SLEEP

  integration_tests:
    build: ${INTEGRATION_TESTS_DIR}
    networks:
      - omotes
    depends_on:
      rabbitmq:
        condition: service_healthy
      omotes_influxdb:
        condition: service_healthy
      orchestrator:
        condition: service_started
      test_worker:
        condition: service_started
      test_hard_crash_worker:
        condition: service_started
      test_long_sleep_worker:
        condition: service_started
    environment:
      RABBITMQ_OMOTES_USER_NAME: ${RABBITMQ_OMOTES_USER_NAME}
      RABBITMQ_OMOTES_USER_PASSWORD: ${RABBITMQ_OMOTES_USER_PASSWORD}
      RABBITMQ_VIRTUALHOST: omotes
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      POSTGRESQL_HOST: orchestrator_postgres_db
      POSTGRESQL_PORT: 5432
      POSTGRESQL_DATABASE: omotes_jobs
      POSTGRESQL_USERNAME: ${POSTGRES_ORCHESTRATOR_USER_NAME}
      POSTGRESQL_PASSWORD: ${POSTGRES_ORCHESTRATOR_USER_PASSWORD}
      LOG_LEVEL: ${LOG_LEVEL}
